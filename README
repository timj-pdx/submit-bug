Submit Bug (Still under development)

These scripts will, upon receipt of an Email create a bug in Jira. These
scripts are run from the mail server.

The Email Subject will be used as the 'summary' in the bug. The Email Body
will be used as the 'description' in the bug.

An Email response will be sent. If the submission was successful, the email
will contain the bug 'ID' & 'KEY'. If the submission was not successful, the
email will contain error messages. The Error may have occurred in the initial
call to curl or curl will return the error message (JSON) from Jira.

The following scripts are being used:
    submit       This bash script is called when mail is received. It
                 will call parse-email & submit-bug.
    parse-email  This python script will parse the email using the
                 'Parser' module.
    submit-bug   This bash script will use the REST API to submit a
                 BUG to Jira.
    README       This file.

The 'submit' script creates the temp directory (/tmp/submit######). The
'parse-email' and 'submit-bug' scripts are run from there. When in production
this directory will be deleted when the submit scripts exits. For debugging
and/or further development you will want to disable the deletion of the
temp directory.

Files Generated at Runtime.
  body             The raw body of the submission email (from 'postfix').
  parsed-body      The parsed body. Generated by 'parse-email' and used by
                   'submit-bug' as the bug description.
  from             The return address for the poster. Generated by 'parse-email'
                   and used by 'submit-bug' to send status reply to poster.
  subject          The subject from the submission email. Generated by
                  'parse-email' and used by submit-bug as the Bug Summary.
  curl.stderr      The output from the 'curl' command run by submmit-bug. The
  curl.stdout      'curl' command is used to submit the BUG in JIRA through
                   the REST API.
  reply.body       Generated by 'submit-bug' it contains the body of the reply
                   Email that is sent to the poster.
  rest-reply.json  The JSON string returned from JIRA

